{{ define "UpdateColumn" }}{{ $smallTableName := .TableName | toCamel | untitle }}
{{- if .IsNullT }}
{{- template "UpdateColumnNullT" . }}
{{- else }}
func (q {{ $smallTableName }}UpdateSQL) Set{{ .MethodName }}(v {{ .TypeName }}) {{ $smallTableName }}UpdateSQL {
	q.setMap[{{ cquoteby .Name }}] = {{ .ExprValueIdentifier }}
	return q
}

func (q {{ $smallTableName }}UpdateSQL) Where{{ .MethodName }}(v {{ .TypeName }}, exprs ...sqlla.Operator) {{ $smallTableName }}UpdateSQL {
	where := {{ .ExprValue }}{Value: {{ .ExprValueIdentifier }}, Op: sqlla.Operators(exprs), Column: {{ cquoteby .Name }}}
	q.where = append(q.where, where)
	return q
}

func (q {{ $smallTableName }}UpdateSQL) Where{{ .MethodName }}In(vs ...{{ .TypeName }}) {{ $smallTableName }}UpdateSQL {
{{- if .HasUnderlyingType }}
	_vs := make([]{{ .BaseTypeName }}, 0, len(vs))
	for _, v := range vs {
		_vs = append(_vs, {{ .BaseTypeName }}(v))
	}
	where := {{ .ExprMultiValue }}{Values: _vs, Op: sqlla.MakeInOperator(len(vs)), Column: {{ cquoteby .Name }}}
{{- else }}
	where := {{ .ExprMultiValue }}{Values: vs, Op: sqlla.MakeInOperator(len(vs)), Column: {{ cquoteby .Name }}}
{{- end }}
	q.where = append(q.where, where)
	return q
}
{{- end }}
{{ end }}
