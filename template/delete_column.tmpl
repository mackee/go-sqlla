{{ define "DeleteColumn" }}{{ $smallTableName := .TableName | toCamel | Untitle }}
func (q {{ $smallTableName }}DeleteSQL) {{ .MethodName }}(v {{ .TypeName }}, exprs ...sqlla.Operator) {{ $smallTableName }}DeleteSQL {
	var op sqlla.Operator
	if len(exprs) == 0 {
		op = sqlla.OpEqual
	} else {
		op = exprs[0]
	}
	where := sqlla.{{ .ExprTypeName }}{Value: {{ .ExprValueIdentifier }}, Op: op, Column: "`{{ .Name }}`"}
	q.where = append(q.where, where)
	return q
}


func (q {{ $smallTableName }}DeleteSQL) {{ .MethodName }}In(vs ...{{ .TypeName }}) {{ $smallTableName }}DeleteSQL {
{{- if .HasUnderlyingType }}
	_vs := make([]{{ .BaseTypeName }}, 0, len(vs))
	for _, v := range vs {
		_vs = append(_vs, {{ .BaseTypeName }}(v))
	}
	where := sqlla.{{ .ExprMultiTypeName }}{Values: _vs, Op: sqlla.MakeInOperator(len(vs)), Column: "`{{ .Name }}`"}
{{- else }}
	where := sqlla.{{ .ExprMultiTypeName }}{Values: vs, Op: sqlla.MakeInOperator(len(vs)), Column: "`{{ .Name }}`"}
{{- end }}
	q.where = append(q.where, where)
	return q
}
{{ end }}
